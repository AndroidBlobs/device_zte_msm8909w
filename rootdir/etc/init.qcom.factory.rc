#
# Copyright (c) 2009-2016, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of The Linux Foundation nor
#       the names of its contributors may be used to endorse or promote
#       products derived from this software without specific prior written
#       permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NON-INFRINGEMENT ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

# Define fastmmi
service fastmmi /vendor/bin/mmi
    user root
    group root
    disabled

service mmid /vendor/bin/mmid
    user root
    group root
    disabled

service mmi_diag /system/bin/mmi_diag
    class main
    user root
    group root oem_2901
    disabled

on property:sys.boot_mode=ffbm
    write ${persist.vendor.mmi.misc_dev_path} "ffbm-01"

on property:sys.boot_mode=qmmi
    write ${persist.vendor.mmi.misc_dev_path} "ffbm-02"

on property:sys.boot_mode=normal
    write ${persist.vendor.mmi.misc_dev_path} "normal"

# Creating a scratch storage on /data for factory testing.
on factory-fs && property:ro.bootmode=ffbm-00
    mount tmpfs tmpfs /data
#on factory-fs && property:ro.bootmode=ffbm-01
on factory-fs && property:ro.bootmode=ffbm-99
    mount tmpfs tmpfs /data
on factory-fs && property:ro.bootmode=ffbm-02
    mount tmpfs tmpfs /data
on post-fs-data
# aligned the usb port with system standard, otherwise if only diag be added
# Then in QMMI mode, the whole Andoid be booted, but due to the ro.bootmode is
# not normal/unknow, then when it apply the default funcs, it will turn to MTP
# which cause the diag/Wwan/modem port all be lost in qmmi mode. Details:
# UsbDeviceManager.java---->getDefaultFunctions and trySetEnabledFunctions

    setprop persist.sys.usb.ffbm-00.func ${persist.sys.usb.config}
    setprop persist.sys.usb.ffbm-01.func ${persist.sys.usb.config}
    setprop persist.sys.usb.ffbm-02.func ${persist.sys.usb.config}

on mmi && property:ro.bootmode=ffbm-00
    # ========================================================
    #              This is FFBM only settings.
    # ========================================================
    #mkdir for factory data files.
    mkdir /persist/FTM_AP 0750 root root
    #set property for sys.usb.config
    write /sys/class/android_usb/android0/noSerialno 1
    write /sys/class/android_usb/android0/rebootFtm ${ro.adbtradefed}
    setprop sys.usb.config diag,adb,facmode

    mkdir /storage/sdcard1 0700 root root
    mount vfat /dev/block/mmcblk1p1 /storage/sdcard1

    mkdir /cache/keybox  0777 root root
    start fastmmi
    #Start the following services needed for fftm
    start servicemanager
    #start surfaceflinger
    start qcom-usb-sh
    start logd
    start debuggerd
    start debuggerd64
    start per_mgr
    start qcom-sh
    start ril-daemon
    start config_bluetooth
    start sensors
    start media
    start wcnss-service
    start qcom-post-boot
    start rmt_storage
    start qcom-c_main-sh
    start irsc_util
    start qcamerasvr
    start qcomsysd
    start ptt_ffbm
    start tftp_server
    start cnss-daemon

#on mmi && property:ro.bootmode=ffbm-01
on mmi && property:ro.bootmode=ffbm-99
    # start qcom-post-boot to set the misc partition path property value
    start qcom-post-boot
    # ========================================================
    #              This is FFBM only settings.
    # ========================================================
    #mkdir for factory data files.
    mkdir /persist/FTM_AP 0750 root root
    #set property for sys.usb.config
    write /sys/class/android_usb/android0/noSerialno 1
    write /sys/class/android_usb/android0/rebootFtm ${ro.adbtradefed}
    setprop sys.usb.config diag,adb,facmode

    mkdir /storage/sdcard1 0700 root root
    mount vfat /dev/block/mmcblk1p1 /storage/sdcard1

    mkdir /cache/keybox  0777 root root
    start fastmmi
    #Start the following services needed for fftm
    start servicemanager
    #start surfaceflinger
    start qcom-usb-sh
    start logd
    start debuggerd
    start debuggerd64
    start per_mgr
    start qcom-sh
    start ril-daemon
    start config_bluetooth
    start sensors
    start media
    start wcnss-service
    start qcom-post-boot
    start rmt_storage
    start qcom-c_main-sh
    start irsc_util
    start qcamerasvr
    start qcomsysd
    start ptt_ffbm
    start tftp_server
    start cnss-daemon

on mmi && property:ro.bootmode=ffbm-02
    # ========================================================
    #              This is FFBM only settings.
    # ========================================================
    #mkdir for factory data files.
    mkdir /persist/FTM_AP 0750 root root

    #set property for sys.usb.config
    write /sys/class/android_usb/android0/noSerialno 1
    write /sys/class/android_usb/android0/rebootFtm ${ro.adbtradefed}
    setprop sys.usb.config diag,adb,facmode

    mkdir /storage/sdcard1 0700 root root
    mount vfat /dev/block/mmcblk1p1 /storage/sdcard1

    chown system system /dev/i2c-2
    chmod 0666 /dev/i2c-2

    mkdir /cache/keybox  0777 root root
    #start servicemanager
    #start surfaceflinger
    #start qcom-usb-sh
    #start logd
    #start debuggerd
    #start debuggerd64
    #start per_mgr
    #start qcom-sh
    #start ril-daemon
    #start config_bluetooth
    #start sensors
    #start media
    #start wcnss-service
    ## start qcom-post-boot to set the misc partition path property value
    #start qcom-post-boot
    #start rmt_storage
    #start qcom-c_main-sh
    #start irsc_util
    #start qcamerasvr
    start qcomsysd
    #start ptt_ffbm
    #start tftp_server
    #start cnss-daemon


on ffbm
    trigger early-fs
    trigger factory-fs
    trigger fs
    trigger post-fs

    # Prevent diag,adb ports from being affected by
    # other property_set actions in factory mode
    setprop sys.usb.factory enable

    # Mount fstab in init.{$device}.rc by mount_all with '--late' parameter
    # to only mount entries with 'latemount'. This is needed if '--early' is
    # specified in the previous mount_all command on the fs stage.
    # With /system mounted and properties form /system + /factory available,
    # some services can be started.
    trigger late-fs

    # Now we can mount /data. File encryption requires keymaster to decrypt
    # /data, which in turn can only be loaded when system properties are present.
    trigger post-fs-data

    # Now we can start zygote for devices with file based encryption
    #trigger zygote-start

    # Load persist properties and override properties (if enabled) from /data.
    trigger load_persist_props_action

    # Remove a file to wake up anything waiting for firmware.
    trigger firmware_mounts_complete

    trigger early-boot
    trigger boot
    trigger mmi
